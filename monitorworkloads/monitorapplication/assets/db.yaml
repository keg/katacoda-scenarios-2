apiVersion: v1
data:
  createdatadoguser: |
    CREATE USER datadog WITH PASSWORD 'datadog';
    GRANT pg_monitor to datadog;
    GRANT SELECT ON pg_stat_database to datadog;
kind: ConfigMap
metadata:
  name: postgres-initdb-configmap
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: postgres
---
apiVersion: v1
kind: Secret
metadata:
  name: db-password
  labels:
    app: ecommerce
    service: db
type: Opaque
data:
  pw: password
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: task-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: "/mnt/data"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: task-pvc-volume
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: manual
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: db
    app: ecommerce
    tags.datadoghq.com/env: "development"
    tags.datadoghq.com/service: "db"
    tags.datadoghq.com/version: "1.0" 
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      service: db
      app: ecommerce
  strategy: {}
  template:
    metadata:
      annotations:
        ad.datadoghq.com/postgres.check_names: '["postgres"]'
        ad.datadoghq.com/postgres.init_configs: '[{}]'
        ad.datadoghq.com/postgres.instances: '[{"host": "%%host%%", "port": "%%port%%","username": "datadog","password": "datadog" }]'
      labels:
        tags.datadoghq.com/env: "development"
        tags.datadoghq.com/service: "db"
        tags.datadoghq.com/version: "1.0" 
        service: db
        app: ecommerce
    spec:
      containers:
        - image: postgres:11-alpine
          name: postgres
          securityContext:
            privileged: true
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: pw
                  name: db-password
            - name: POSTGRES_USER
              value: "user"
            - name: PGDATA
              value: "/var/lib/postgresql/data/mydata"
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgresdb
            - name: postgres-initdb-configmap
              mountPath: /docker-entrypoint-initdb.d/
      serviceAccountName: postgres
      volumes:
        - name: postgresdb
          persistentVolumeClaim:
            claimName: task-pvc-volume
        - name: postgres-initdb-configmap
          configMap:
            name: postgres-initdb-configmap
            items:
              - key: createdatadoguser
                path: createdatadoguser.sql
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: ecommerce
    service: db
  name: db
spec:
  ports:
    - port: 5432
      protocol: TCP
      targetPort: 5432
  selector:
    app: ecommerce
    service: db
status:
  loadBalancer: {}
