version: "3"
services:
  agent:
    image: "datadog/agent:7.21.0"
    environment:
      - DD_API_KEY
      - DD_APM_ENABLED=true
      - DD_LOGS_ENABLED=true
      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true
      - DD_PROCESS_AGENT_ENABLED=true
      - DD_TAGS='env:ruby-shop'
    ports:
      - "8126:8126"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
    labels:
      com.datadoghq.ad.logs: '[{"source": "agent", "service": "agent"}]'
  discounts:
    environment:
      - FLASK_APP=discounts.py
      - FLASK_DEBUG=1
      - POSTGRES_PASSWORD
      - POSTGRES_USER
      - DATADOG_SERVICE_NAME=discounts-service
      - DD_AGENT_HOST=agent
      - DD_LOGS_INJECTION=true
      - DD_ANALYTICS_ENABLED=true
    image: "ddtraining/discounts-service:latest"
    command: ddtrace-run flask run --port=5001 --host=0.0.0.0
    ports:
      - "5001:5001"
    volumes:
      - "../discounts-service:/app"
    depends_on:
      - agent
      - db
    labels:
      com.datadoghq.ad.logs: '[{"source": "python", "service": "discounts-service"}]'
  frontend:
    environment:
      - DD_AGENT_HOST=agent
      - DD_LOGS_INJECTION=true
      - DD_ANALYTICS_ENABLED=true
      - DB_USERNAME
      - DB_PASSWORD
      - DD_CLIENT_TOKEN
      - DD_APPLICATION_ID
    image: "ddtraining/ecommerce-frontend-broken:latest"
    command: sh docker-entrypoint.sh
    ports:
      - "3000:3000"
    volumes:
      - "../store-frontend-broken-instrumented/store-frontend:/spree/store-frontend"
    depends_on:
      - agent
      - db
      - discounts
      - advertisements
    labels:
      com.datadoghq.ad.logs: '[{"source": "ruby", "service": "store-frontend"}]'
  advertisements:
    environment:
      - FLASK_APP=ads.py
      - FLASK_DEBUG=1
      - POSTGRES_PASSWORD
      - POSTGRES_USER
      - DATADOG_SERVICE_NAME=advertisements-service
      - DD_AGENT_HOST=agent
      - DD_LOGS_INJECTION=true
      - DD_ANALYTICS_ENABLED=true
    image: "ddtraining/advertisements-service:latest"
    command: ddtrace-run flask run --port=5002 --host=0.0.0.0
    ports:
      - "5002:5002"
    volumes:
      - "../ads-service:/app"
    depends_on:
      - agent
      - db
    labels:
      com.datadoghq.ad.logs: '[{"source": "python", "service": "ads-service"}]'
  db:
    image: postgres:11-alpine
    restart: always
    command:
      [
        "postgres",
        "-c",
        "logging_collector=on",
        "-c",
        "log_statement=all",
        "-c",
        "log_directory=/logs",
        "-c",
        "log_filename=pg.log",
        "-c",
        "log_file_mode=0644",
      ]
    volumes:
      - /logs
    environment:
      - POSTGRES_PASSWORD
      - POSTGRES_USER
    labels:
      com.datadoghq.ad.check_names: '["postgres"]'
      com.datadoghq.ad.init_configs: "[{}]"
      com.datadoghq.ad.instances: '[{"host": "%%host%%", "port": "5432",  "password":"password", "username": "datadog", "collect_activity_metrics": true, "collect_default_database":true, "collect_function_metrics": true}]'
      com.datadoghq.ad.logs: '[{"source": "postgresql", "service": "postgresql"}]'
